@model DATN.ViewModel.RoomGal
@using DATN.Controllers
@inject DATN.Models.Context.DATNDbContext DbContext
@using System.Globalization
@{
    var comments = GetDataController.GetCommentsWithUser(DbContext, Model.Room.ID);
    var vietnamCulture = new CultureInfo("vi-VN");
    var userIdClaim = User.FindFirst("UserId")?.Value;
    var roomame = GetDataController.GetRoomAmenity(DbContext, Model.Room.ID);   
}

<link rel="stylesheet" href="~/FE2/css/style.css" />
<link rel="stylesheet" href="~/FE2/css/singleRoom.css" />
<link rel="stylesheet" href="~/FE2/css/responsive.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" type="text/css" href="~/FE/css/gallery-grid.css">
<link rel="stylesheet" type="text/css" href="~/FE/css/detail-room.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<div class="page-title container-fluid">
    <div class="container" style="position: relative;">
        <p class="title">@Model.Room.Name</p>
        <p class="page-tree">
            <span class="home"><a href="/">Trang chủ</a></span>
            <span><i class="fa fa-angle-right"></i></span>
            <span><a href="/ListRoom">Phòng</a></span>
            <span><i class="fa fa-angle-right"></i></span>
            <span><a href="#">@Model.Room.Name</a></span>
        </p>
    </div>
</div>
<section class="main">
    <div class="container">
        <div class="row">
            <div class="col-12 col-xl-9">
                <div class="main__slide">
                    <div class="slide-image">
                        @foreach(var item in Model.RoomGalleries)
                        {
                            <img src="~/RoomGallery/@item.Image"
                                 alt="room image" />
                        }
                    </div>
                    <div class="slide-list">
                        @foreach(var item in Model.RoomGalleries)
                        {
                            <div class="slide-list-img">
                                <img src="~/RoomGallery/@item.Image"
                                     alt="room image" />
                            </div>
                        }
                    </div>
                </div>

                <div class="main__navTabs">
                    <div class="row">
                        <div class="col-12 col-md-4">
                            <ul class="nav nav-tabs d-block">
                                <li>
                                    <a data-toggle="tab"
                                       href="#detail"
                                       class="font-style active">Chi tiết phòng</a>
                                </li>
                                <div class="information__line"></div>
                                <li>
                                    <a data-toggle="tab" href="#review" class="font-style">Đánh giá</a>
                                </li>
                            </ul>
                        </div>
                        <div class="col-12 col-md-8">
                            <div class="tab-content">
                                <div id="detail" class="tab-pane fade in active show">
                                    <div class="information">                                        
                                        <p>
                                            @Html.Raw(Model.Room.MetaDescription)
                                        </p>
                                        <div class="information__line"></div>
                                        <h1>Chi tiết phòng</h1>
                                        <p>Tên phòng: @Model.Room.Name</p>
                                        <p>Loại phòng: @Model.Room.RoomType.Name<p>
                                        <p>Giá: @Model.Room.Price.ToString("#,##0 VND")</p>
                                        <div class="information__line"></div>
                                        <h1>Tiện nghi</h1>
                                        <div class="row">
                                            @foreach (var item in roomame)
                                            {
                                                <div class="col-md-6 col-12 mb-2">
                                                    <span class="checkmark">✓</span> @item.Name
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div id="review" class="tab-pane fade">
                                    <div class="review__comments">
                                        <h1>BÌNH LUẬN</h1>
                                        @foreach(var item in comments)
                                        {                                            
                                            <div class="commnets__col">
                                                <div class="row">
                                                    <div class="comments__center col-12 col-sm-4">
                                                        <img src="~/Images/Account/@item.Account.Avatar"
                                                             alt="avatar" />
                                                    </div>
                                                    <div class="col-12 col-sm-8">
                                                        <h1>@item.Account.Name.ToUpper()</h1>
                                                        <span>@item.Created.ToString("dd MMMM yyyy - hh:mm tt", vietnamCulture)</span>
                                                        <p>
                                                            @item.Content
                                                        </p>

                                                        @if (userIdClaim != null && item.AccountId == Int32.Parse(userIdClaim))
                                                        {
                                                            <button onclick="toggleEditForm(@item.Id)">Sửa</button>
                                                            <button onclick="confirmDelete(@item.Id)">Xóa</button>

                                                            <!-- Edit form -->
                                                            <form id="editForm-@item.Id" style="display: none;" onsubmit="editComment(event, @item.Id)">
                                                                <textarea name="content" placeholder="Your comment..." rows="5" required>@item.Content</textarea>
                                                                <input type="submit" value="Lưu" class="btn btn-primary" />
                                                                @Html.AntiForgeryToken()
                                                            </form>
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        }                                        
                                    </div>
                                    <div class="information__line"></div>
                                    <div class="review__postComments">
                                        <h1>THÊM BÌNH LUẬN</h1>
                                    </div>
                                    @if (!User.Identity.IsAuthenticated)
                                    {
                                        <p>Bạn cần đăng nhập mới có thể đánh giá. <a href="/Account/Login">Đăng nhập ngay</a></p>
                                    }
                                    else
                                    {
                                        <div class="review__input">
                                            <form id="commentForm">
                                                <textarea name="content" placeholder="Đánh giá của bạn..." rows="5" required></textarea>
                                                <input type="hidden" name="roomId" value="@Model.Room.ID" />
                                                <button type="submit" class="add-comment">Thêm</button>
                                            </form>
                                        </div>
                                    }                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12 col-xl-3">
                <form asp-action="MakeReservation" asp-controller="Booking" id="reservationForm">
                    <div class="reservation" >
                        <input type="hidden" name="roomId" asp-for="@Model.Room.ID" />
                        <div class="reservation__title">Đặt phòng</div>
                        <div class="reservation__input-list">
                            <span class="reservation-calendar">
                                <label for="">Ngày nhận phòng:</label>
                                <input type="text" id="checkIn" name="checkInDate"/>
                            </span>
                        </div>
                        <div class="reservation__input-list">
                            <span class="reservation-calendar">
                                <label for="">Ngày trả phòng:</label>
                                <input type="text" id="checkOut" name="checkOutDate"/>
                            </span>
                        </div>
                        <div class="reservation__input-list">
                            <label for="">Số lượng phòng:</label>
                            <input type="number" name="quantities[@Model.Room.ID]" min="1" max="1" value="1" />
                        </div>
                        <div class="reservation__btn">
                            <input type="submit" value="Đặt phòng này" />
                        </div>
                    </div>
                </form>
            </div>
            
            
        </div>
    </div>
</section>

<script src="~/FE2/js/jquery-3.5.1.min.js"></script>
<script type="text/javascript"
        src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
        integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
        crossorigin="anonymous"></script>
<script src="~/FE2/plugins/masonry/masonry.pkgd.js"></script>
<script src="~/FE2/plugins/masonry/imagesloaded.pkgd.js"></script>
<script src="~/FE2/plugins/fontawesome/all.js"></script>
<script src="~/FE2/plugins/validation1.19.3/jquery.validate.min.js"></script>
<script src="~/FE2/plugins/rating/jquery.barrating.min.js"></script>
<script src="~/FE2/plugins/slick/slick.js"></script>
<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<!-- Main JS-->
<script src="~/FE2/js/main.js"></script>
<script src="~/FE2/js/single-room.js"></script>
<script src="~/FE2/plugins/slick/slick.min.js"></script>
<script type="text/javascript" src="~/FE/js/gallery-grid.js"></script>
<script type="text/javascript" src="~/FE/js/detail-room.js"></script>
<script>
        //Thêm bình luận
        document.getElementById("commentForm").addEventListener("submit", function (event) {
            event.preventDefault();

            var formData = new FormData(this);
            fetch('/Comments/PostComment', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                })
                .catch(error => console.error("Lỗi thêm bình luận:", error));
        });

        //Hiện đoạn text sửa
        function toggleEditForm(commentId) {
            var form = document.getElementById("editForm-" + commentId);
            form.style.display = form.style.display === "none" ? "block" : "none";
        }

        //Sửa bình luận
        function editComment(event, commentId) {
            event.preventDefault(); // Prevent form submission

            var form = document.getElementById("editForm-" + commentId);
            var content = form.querySelector("textarea[name='content']").value;
            var token = form.querySelector('input[name="__RequestVerificationToken"]').value;

            var data = new FormData();
            data.append('id', commentId);
            data.append('content', content);
            data.append('__RequestVerificationToken', token); // Add the token to FormData

            fetch(`/Comments/Edit`, {
                method: 'POST',
                body: data // Send data as FormData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Reload the page to fetch and display the latest data
                        location.reload();
                    } else {
                        console.error("Lỗi khi thêm bình luận:", data.message);
                    }
                })
                .catch(error => {
                    console.error("Lỗi sửa bình luận:", error);
                });
        }

    //Xác nhận xóa bình luận
    function confirmDelete(commentId) {
        // Show a confirmation dialog
        if (confirm("Are you sure you want to delete this comment?")) {
            // If the user confirms, proceed with the deletion
            deleteComment(commentId);
        }
    }

    //Đồng ý xóa
    function deleteComment(commentId) {
        var token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch(`/Comments/Delete/${commentId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to reflect the deletion
                    location.reload();
                } else {
                    console.error("Lỗi xóa bình luận:", data.message);
                }
            })
            .catch(error => {
                console.error("Lỗi xóa bình luận:", error);
            });
    }
</script>
<script>
    $(document).ready(function () {
        // Get the booked dates passed from the controller
        var bookedDates = @Html.Raw(Json.Serialize(ViewBag.BookedDates));

        // Prepare an array of disabled dates using moment.js for comparison
        var disabledDates = bookedDates.map(function (date) {
            return moment(date, "DD/MM/YYYY"); // Convert each date string to moment object
        });


        // Function to check if a date is in the disabledDates array
        function isDateDisabled(date) {
            return disabledDates.some(function (disabledDate) {
                return date.isSame(disabledDate, 'day'); // Compare by day only
            });
        }

        // Initialize the checkIn date picker
        $('#checkIn').daterangepicker({
            singleDatePicker: true, // Only select one date
            minDate: new Date(), // Prevent past dates
            dateLimit: { days: 365 }, // Limit to 365 days ahead
            isInvalidDate: function (date) {
                // Disable dates in the bookedDates array
                return isDateDisabled(date);
            },
            locale: {
                dateFormat: 'dd/mm/yy' // Date format
            }
        });

        // Initialize the checkOut date picker
        $('#checkOut').daterangepicker({
            singleDatePicker: true, // Only select one date
            minDate: new Date(), // Prevent past dates
            dateLimit: { days: 365 }, // Limit to 365 days ahead
            isInvalidDate: function (date) {
                // Disable dates in the bookedDates array
                return isDateDisabled(date);
            },
            locale: {
                dateFormat: 'dd/mm/yy' // Date format
            }
        });

        // Ensure that the checkOut date is after the checkIn date
        $('#checkIn').on('apply.daterangepicker', function (ev, picker) {
            var checkInDate = picker.startDate;

            // Reinitialize the checkOut picker with updated minDate
            $('#checkOut').daterangepicker({
                minDate: checkInDate, // Ensure checkOut is after checkIn
                singleDatePicker: true,
                isInvalidDate: function (date) {
                    // Disable dates in the bookedDates array
                    return isDateDisabled(date);
                },
                locale: {
                    dateFormat: 'dd/mm/yy' // Date format
                }
            });
        });
    });
</script>










